任务
1. 场景搭建
	——使用tiled：https://www.mapeditor.org/搭建瓦片地图
	——编写场景类，场景类能够加载任意符合标准的瓦片地图。
	——场景创建时，从硬盘读取地图和节点及精灵数据并加载显示，并初始化场景音频；场景销毁时，要将场景数据（地图和节点）保存回硬盘文档
	——加载的对象如果有动画序列（npc的随机移动/树随风摇摆/水面反光）要正常加载
	——需要预留接口用于交互，能够接受一个物品参数（添加物品）或是返回物品的引用（根据坐标修改物品）
	——需要预留接口用于上下左右的移动，移动能够调整地图显示范围，在未到达地图边缘时，始终以玩家为中心；到达地图边缘，则不再移动。（玩家是精灵）
	——天气系统，不同天气可以渲染不同的界面（选）

2. 物品、npc交流及行为
	——所有节点及精灵的逻辑、动作序列设计（比如：npc的随机移动/树随风摇摆/水面反光/玩家拿取不同物品/玩家行走）
	——物品的逻辑设计要符合常理（比如：玩家、npc遇到有碰撞体积的对象不能继续前进）
	——需要预留接口给界面对象，用于改变物品属性。
	——对于不同的对象，要返回不同的信息，比如：npc对象返回对话以及npc的头像。

3. 界面与玩家数据设计
	——设计商店、背包、技能、地图，设计背包栏、小地图

4. 设计事件监听器
	——接受esc时，弹出或关闭背包界面
	——接受上下左右，wasd时，在地图中，调用场景函数上下左右移动；在背包界面，选中不同物品；在
	——能够与这些界面交互，交互后能正确改变主角数据，玩家每次交互后，能够正确改变玩家的数据

4. 玩家行为逻辑判定
	——判定各种事件，鼠标、键盘事件
	——游戏主界面与存档
	——场景切换的判定
	——网络联机系统（选）
	——全屏设计

*因为npc的随时间移动从而模拟每个人的独特作息的功能制作比较困难，暂时不做设计

玩家行为判定 --操作-->  界面与玩家数据设计 --移动--> 场景<-----
								|						|
								|					    存储
								|						|
								--添加或修改-->物品<------